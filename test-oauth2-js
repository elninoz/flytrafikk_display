const https = require('https');
const querystring = require('querystring');

// Test med dine faktiske credentials
const CLIENT_ID = 'eldar_r@hotmail.com-api-client';
const CLIENT_SECRET = 'cu5etDikxagvmUPl1Q84375EzqgE6mOO';

async function testOAuth2() {
    try {
        console.log('🔐 Testing OAuth2...');

        // Hent token
        const token = await getToken();
        console.log('✅ Token mottatt:', token.substring(0, 20) + '...');

        // Test API
        const flights = await getFlights(token);
        console.log('✅ Flydata mottatt:', flights.states ? flights.states.length + ' fly' : 'ingen fly');

    } catch (error) {
        console.error('❌ OAuth2 feil:', error.message);
    }
}

function getToken() {
    return new Promise((resolve, reject) => {
        const postData = querystring.stringify({
            grant_type: 'client_credentials',
            client_id: CLIENT_ID,
            client_secret: CLIENT_SECRET
        });

        const options = {
            hostname: 'auth.opensky-network.org',
            port: 443,
            path: '/auth/realms/opensky-network/protocol/openid-connect/token',
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
                'Content-Length': Buffer.byteLength(postData)
            }
        };

        const req = https.request(options, (res) => {
            let data = '';
            res.on('data', chunk => data += chunk);
            res.on('end', () => {
                if (res.statusCode === 200) {
                    const tokenData = JSON.parse(data);
                    resolve(tokenData.access_token);
                } else {
                    reject(new Error(`Token failed: ${res.statusCode} - ${data}`));
                }
            });
        });

        req.on('error', reject);
        req.write(postData);
        req.end();
    });
}

function getFlights(token) {
    return new Promise((resolve, reject) => {
        const options = {
            hostname: 'opensky-network.org',
            port: 443,
            path: '/api/states/all?lamin=60&lamax=61&lomin=5&lomax=6',
            method: 'GET',
            headers: {
                'Authorization': `Bearer ${token}`,
                'Accept': 'application/json'
            }
        };

        const req = https.request(options, (res) => {
            let data = '';
            res.on('data', chunk => data += chunk);
            res.on('end', () => {
                if (res.statusCode === 200) {
                    resolve(JSON.parse(data));
                } else {
                    reject(new Error(`API failed: ${res.statusCode}`));
                }
            });
        });

        req.on('error', reject);
        req.end();
    });
}

testOAuth2();